---
import ContentContainer from "@/contexts/_shared/client/presentation/components/content-container.component.astro";
import { getAuthenticatedUserIdOrRedirect } from "@/contexts/_shared/server/application/usecases/get-authenticated-user-or-redirect";
import SearchBar from "@/contexts/_shared/client/presentation/components/search-bar.component.astro";
import { getAllProfilesByRoleId } from "@/contexts/profiles/server/application/usecases/get-all-profiles-by-role-id.usecase";

const authenticatedUserId = getAuthenticatedUserIdOrRedirect(Astro);

let owners = [];
const getOwnersResult = await getAllProfilesByRoleId(import.meta.env.OWNER_ROLE_ID, authenticatedUserId);

if (getOwnersResult.success) {
    owners = getOwnersResult.data ?? [];
}

const tableHeaders = [
    "Nombre",
    "Correo",
    "Celular",
    "N° de mascotas",
]

---

<ContentContainer>
    <div class="sm:flex sm:justify-between sm:items-center">
        <h2 class="text-2xl font-bold leading-6 text-gray-900">Dueños de mascotas</h2>
        <div class="flex gap-4">
            <SearchBar id="owner-search" name="owner-search" placeholder="Buscar por nombre..." />
            <a href="/app/owners/newOwner" class="block rounded-md bg-[#6faab5] px-3 py-2 text-center text-sm font-semibold text-white shadow-sm hover:bg-[#5f9ea8] focus-visible:outline focus-visible:outline-2 focus-visible:outline-offset-2 focus-visible:outline-[#6faab5]">
                Añadir Dueño
            </a>
        </div>
    </div>
    <div class="mt-8 flow-root">
        <div class="-mx-4 -my-2 overflow-x-auto sm:-mx-6 lg:-mx-8">
            <div class="inline-block min-w-full py-2 align-middle sm:px-6 lg:px-8">
                <table id="owners-table" class="min-w-full divide-y divide-gray-300">
                    <thead>
                        <tr>
                            {
                                tableHeaders.map(header => 
                                <th scope="col" class="px-3 py-3.5 text-left text-base font-semibold text-gray-900">{header}</th>
                                )
                            }
                        </tr>
                    </thead>
                    <tbody class="divide-y divide-gray-200">
                        {
                            owners.map((owner: any) => 
                                <tr class="relative hover:bg-gray-50 cursor-pointer">
                                    <td class="whitespace-nowrap px-3 py-4 text-base text-gray-500 font-medium">
                                        <a href={`/app/owners/${owner.id}`} class="before:absolute before:inset-0" aria-label={`Ver detalles de ${owner.name}`}>
                                            <span class="relative z-10">{owner.name + " " + owner.lastname}</span>
                                        </a>
                                    </td>
                                    <td class="whitespace-nowrap px-3 py-4 text-base text-gray-500">{owner.email}</td>
                                    <td class="whitespace-nowrap px-3 py-4 text-base text-gray-500">{owner.phone}</td>
                                    <td class="whitespace-nowrap px-3 py-4 text-base text-gray-500">{owner.ownersCount}</td>
                                </tr>
                            )
                        }
                    </tbody>
                </table>
            </div>
        </div>
    </div>
</ContentContainer>

<script>
    function initializePageScripts() {
        const searchInput = document.getElementById("owner-search") as HTMLInputElement;
        const table = document.getElementById('owners-table');
        const tableRows = table?.querySelectorAll('tbody tr');

        const normalizeText = (text: string | null | undefined): string => {
            if (!text) return "";
            return text
                .toLowerCase()
                .normalize("NFD")
                .replace(/\p{M}/gu, "");
        }

        if (searchInput && tableRows) {
            searchInput.addEventListener('input', () => {
                const searchTerm = normalizeText(searchInput.value);

                tableRows.forEach(row => {
                    let rowText = "";
                    row.querySelectorAll('td').forEach(cell => {
                        rowText += normalizeText(cell.textContent);
                    });

                    if (rowText.includes(searchTerm)) {
                        (row as HTMLElement).style.display = '';
                    } else {
                        (row as HTMLElement).style.display = 'none';
                    }
                });
            });
        }
    }

    // Ejecuta los scripts en la carga inicial de la página (con View Transitions) 
    // y en cada navegación del lado del cliente.
    document.addEventListener('astro:page-load', initializePageScripts);
</script>