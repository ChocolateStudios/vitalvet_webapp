---
import AuthContainer from "@/contexts/auth/presentation/components/auth-container.component.astro"
import BaseTextInput from "@/contexts/_shared/client/presentation/components/base-text-input.component.astro"
import DogCat from "@/assets/dogcat.png"

const inputFields = [
    {
        id: "email",
        name: "email",
        type: "email",
        autocomplete: "email",
        label: "Correo"
    },
    {
        id: "password",
        name: "password",
        type: "password",
        autocomplete: "password",
        label: "Contraseña"
    }
]

---

<AuthContainer right>
    <!-- Background Image with reduced opacity -->
     <div class="absolute inset-0 z-0 bg-cover bg-center opacity-40 ml-[-200px]" style={`background-image: url(${DogCat.src})`}></div>
    <!-- White gradient overlay -->
     <div class="absolute inset-0 z-0 [background-image:linear-gradient(100deg,transparent,white_50%)]"></div>

    <!-- Form Content -->
    <div class="flex flex-col items-end z-20 m-12 gap-6 p-8 sm:p-12 w-full max-w-lg">
        <h1 class="font-bold text-3xl">Iniciar sesión</h1>
        <p class="text-base text-slate-600">¿No tienes cuenta? <a href="/app/register" class="text-[#6faab5] hover:text-[#5f9ea8] font-bold">Regístrate</a></p>
        <form id="login-form" class="flex flex-col w-full items-end gap-5" novalidate>
            {
                inputFields.map((inputField) => 
                    <BaseTextInput {...inputField} class="w-full" />
                )
            }
            <div id="form-error" class="text-red-600 text-sm font-semibold"></div>
            <button id="submit-button" type="submit" class="w-fit rounded-full bg-[#6faab5] px-8 py-3 text-sm font-semibold text-white shadow-lg shadow-[#6faab5]/30 transition-colors hover:bg-[#5f9ea8] focus-visible:outline-2 focus-visible:outline-offset-2 focus-visible:outline-[#6faab5] disabled:bg-slate-400 disabled:cursor-not-allowed">Iniciar sesión</button>
        </form>
    </div>
</AuthContainer>

<script>
    import { SaveUserResource } from "../../services/resources/save-user.resource";
    import { loginUser } from "../../usecases/login-user.usecase";

    const form = document.getElementById('login-form') as HTMLFormElement | null;

    if (form) {
        const emailInput = document.getElementById('email') as HTMLInputElement;
        const passwordInput = document.getElementById('password') as HTMLInputElement;
        const submitButton = document.getElementById('submit-button') as HTMLButtonElement;
        const formError = document.getElementById('form-error') as HTMLDivElement;

        const showError = (input: HTMLInputElement, message: string) => {
            const errorContainer = document.getElementById(`${input.id}-error-container`);
            if (errorContainer) {
                errorContainer.textContent = message;
            }
            input.classList.remove('outline-gray-300', 'focus:outline-blue-800');
            input.classList.add('outline-red-500', 'focus:outline-red-500');
        }

        const clearError = (input: HTMLInputElement) => {
            const errorContainer = document.getElementById(`${input.id}-error-container`);
            if (errorContainer) {
                errorContainer.textContent = '';
            }
            input.classList.remove('outline-red-500', 'focus:outline-red-500');
            input.classList.add('outline-gray-300', 'focus:outline-blue-800');
        }

        form.addEventListener('submit', async (event) => {
            event.preventDefault();

            clearError(emailInput);
            clearError(passwordInput);
            if (formError) {
                formError.textContent = '';
            }

            const email = emailInput.value;
            const password = passwordInput.value;
            let isValid = true;

            if (!email) {
                showError(emailInput, 'El correo es obligatorio');
                isValid = false;
            } else if (!/^[^\s@]+@[^\s@]+\.[^\s@]+$/.test(email)) {
                showError(emailInput, 'Por favor, introduce un correo válido');
                isValid = false;
            }
            
            if (!password) {
                showError(passwordInput, 'La contraseña es obligatoria');
                isValid = false;
            } else if (password.length < 6) {
                showError(passwordInput, 'La contraseña debe tener al menos 6 caracteres');
                isValid = false;
            }   

            if (isValid) {
                submitButton.disabled = true;
                submitButton.textContent = 'Iniciando sesión...';

                try {
                    const response = await loginUser(new SaveUserResource(email, password));
                    if (response.success) {
                        window.location.href = '/app/home';
                    } else {
                        formError.textContent = response.errorMessage ?? 'Error al iniciar sesión. Por favor, inténtalo de nuevo.';
                    }
                } catch (error) {
                    console.error('Error al iniciar sesión:', error);
                    formError.textContent = 'Error al iniciar sesión. Por favor, inténtalo de nuevo.';
                } finally {
                    submitButton.disabled = false;
                    submitButton.textContent = 'Iniciar sesión';
                }
            }
        });
    }
</script>