---
import petProfilePhoto from "../../../../assets/petProfilePhoto.png";
import ContentContainer from "../../../_shared/presentation/components/content-container.component.astro";
import BaseTextInput from "../../../_shared/presentation/components/base-text-input.component.astro";
import { getAllMedicalAppointmentsByPetId } from "../../usecases/getall-medicalappointments-by-petid.usecase";
import { getPet } from "../../../pets/usecases/get-pet.usecase";
import { formatRelativeTime } from "@/contexts/_shared/client/utils/date-formatter.util";

const { petId } = Astro.props;

// const petId = Number(petIdString);

let pet = null;
let medicalHistory = null;

const getPetResult = await getPet(petId, Astro.url.origin);

if (getPetResult.success) {
    pet = getPetResult.data;
}

const getMedicalHistory = await getAllMedicalAppointmentsByPetId(petId, Astro.url.origin);

if (getMedicalHistory.success) {
    medicalHistory = getMedicalHistory.data;
}

const profileInput = {
    id: "name",
    name: "name",
    type: "text",
    autocomplete: "name",
    label: "Nombre",
    value: pet?.name,
};

const tableHeaders = [
    "N° cita",
    "Fecha de creación",
    "Doctor"
]

---

<ContentContainer class="h-full">
    <div class="mb-8 flex items-start gap-4">
        <a href={`/app/pets/${petId}`} class="p-2 rounded-full text-gray-600 hover:bg-gray-200 transition-colors focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-[#6faab5] -mt-1" aria-label="Volver a la página de inicio">
            <svg xmlns="http://www.w3.org/2000/svg" class="h-6 w-6" fill="none" viewBox="0 0 24 24" stroke="currentColor" stroke-width="2">
                <path stroke-linecap="round" stroke-linejoin="round" d="M15 19l-7-7 7-7" />
            </svg>
        </a>
        <h2 class="text-2xl font-bold leading-tight text-gray-900 mb-8">Historial médico</h2>
    </div>
    <form class="grid grid-cols-1 lg:grid-cols-5 gap-8 items-center" novalidate>
        <div class="lg:col-span-2 bg-white rounded-xl shadow-lg p-8 flex flex-col items-center text-center" transition:name={pet ? `pet-profile-${pet.id}`: ''}>
            <div class="relative w-40 h-40 mb-6">
                <img 
                    src={petProfilePhoto.src} 
                    alt={`Foto de ${pet?.name || 'mascota'}`} 
                    class="rounded-full w-40 h-40 object-cover border-4 border-white shadow-md" 
                />
            </div>
            <BaseTextInput {...profileInput} class="w-full" readonly />
        </div>
        <div class="lg:col-span-3 -mt-11">
            <div class="flex justify-end mb-2">
                <a href={`/app/pets/${petId}/medical-history/new`} class="rounded-md bg-[#6faab5] px-4 py-2 text-center text-sm font-semibold text-white shadow-sm hover:bg-[#5f9ea8] focus-visible:outline focus-visible:outline-2 focus-visible:outline-offset-2 focus-visible:outline-[#6faab5] cursor-pointer">
                    Agregar
                </a>
            </div>
            <div class="flow-root bg-white rounded-xl shadow-lg p-8">
                <div class="-mx-4 -my-2 overflow-x-auto sm:-mx-6 lg:-mx-8">
                    <div class="inline-block min-w-full py-2 align-middle sm:px-6 lg:px-8">
                        <table class="min-w-full divide-y divide-gray-300">
                            <thead>
                                <tr>
                                    {
                                        tableHeaders.map((header, index) => 
                                            <th scope="col" class:list={[
                                                "px-3 py-3.5 text-sm font-semibold text-gray-900",
                                                index > 0 ? "text-left" : "text-center"
                                            ]}>
                                                {header}
                                            </th>
                                        )
                                    }
                                </tr>
                            </thead>
                            <tbody class="divide-y divide-gray-200">
                                {
                                    medicalHistory && medicalHistory.length > 0 &&
                                        medicalHistory?.map(medicalAppointment => 
                                            <tr class="relative hover:bg-gray-50 cursor-pointer">
                                                <td class="whitespace-nowrap py-4 pl-4 pr-3 text-sm text-center text-gray-900 sm:pl-0">
                                                    <a href={`/app/pets/${petId}/medical-history/${medicalAppointment.id}`} class="before:absolute before:inset-0" aria-label={`Ver detalles de la cita número ${medicalAppointment.appointmentNumber} de ${medicalAppointment.doctorName}`}>
                                                        <span class="relative z-10">{medicalAppointment.appointmentNumber}</span>
                                                    </a>
                                                </td>
                                                <td class="whitespace-nowrap px-3 py-4 text-sm text-gray-500">{formatRelativeTime(medicalAppointment.createdAt)}</td>
                                                <td class="whitespace-nowrap px-3 py-4 text-sm text-gray-500">{medicalAppointment.doctorName}</td>
                                            </tr>
                                        )
                                }
                            </tbody>
                        </table>
                        {
                            !medicalHistory || medicalHistory.length === 0 &&
                                <div class="py-4 text-center">
                                    <p class="text-sm text-gray-500">No hay citas médicas registradas.</p>
                                </div>
                        }
                    </div>
                </div>
            </div>
        </div>
    </form>
</ContentContainer>