---
import petProfilePhoto from "@/assets/petProfilePhoto.png";
import ContentContainer from "@/contexts/_shared/client/presentation/components/content/content-container.component.astro";
import DynamicInput from "@/contexts/_shared/client/presentation/components/inputs/dynamic-input.component.astro";
// import BaseTextInput from "@/contexts/_shared/client/presentation/components/base-text-input.component.astro";
import { getAllMedicalAppointmentsByPetId, type MedicalAppointmentListItemInfo } from "@/contexts/medical_histories/server/application/usecases/getall-medicalappointments-by-petid.usecase";
import { getPet } from "@/contexts/pets/server/application/usecases/get-pet.usecase";
import { formatDateToDdMmYyyyHhMm } from "@/contexts/_shared/client/utils/date-formatters/clasicdate-formatter.utils";
import type { PetInfo } from "@/contexts/pets/client/usecases/get-pet.usecase";
import ContentTop from "@/contexts/_shared/client/presentation/components/content/content-top.component.astro";
import SearchBar from "@/contexts/_shared/client/presentation/components/search-bar.component.astro";
import ActionLink from "@/contexts/_shared/client/presentation/components/actions/action-link.component.astro";
import SimpleTable from "@/contexts/_shared/client/presentation/components/simple-table.component.astro";
import SimpleForm from "@/contexts/_shared/client/presentation/components/forms/simple-form.component.astro";

const { petId } = Astro.props;

let pet: PetInfo | null = null;
let medicalHistory: MedicalAppointmentListItemInfo[] = []

const getPetResult = await getPet(petId);
if (getPetResult.success) {
    pet = getPetResult.data ?? null;
}

const getMedicalHistory = await getAllMedicalAppointmentsByPetId(petId);
if (getMedicalHistory.success) {
    medicalHistory = getMedicalHistory.data ?? [];
}

const profileInputs = [
    {
        id: "name",
        name: "name",
        type: "text",
        autocomplete: "name",
        label: "Nombre",
        value: pet?.name,
    },
    {
        id: "owner",
        name: "owner",
        type: "text",
        autocomplete: "owner",
        label: "Propietario",
        value: pet?.ownerName,
    },
];

const tableHeaders = [
    "N° cita",
    "Fecha de la cita",
    "Veterinario",
    "Peso (kg)",
]

---

<ContentContainer class="h-full">
    <ContentTop backHref={`/app/pets/${petId}`}>
        Historial médico <!-- MainTitle -->
        <div slot="right" class="flex gap-4">
            <SearchBar id="medicalhistory-search" name="medicalhistory-search" />
            <ActionLink href={`/app/pets/${petId}/medical-history/new`} style="submit">
                Añadir cita
            </ActionLink>
        </div>
    </ContentTop>
    <!-- <form class="grid grid-cols-1 lg:grid-cols-6 gap-8 items-center" novalidate> -->
    <SimpleForm>
        <div class="lg:col-span-2 bg-gray-200 rounded-xl shadow-lg p-7 text-left" transition:name={pet ? `pet-profile-${pet.id}`: ''}>
            <div class="flex flex-row items-center justify-between mb-3">
                <h3 class="font-semibold">Datos de la mascota</h3>
                <a href={`/app/pets/${pet?.id}`} title={`Ver más de ${pet?.name}`} class="text-gray-500 hover:text-gray-800 transition-colors">
                    <svg xmlns="http://www.w3.org/2000/svg" class="h-5 w-5" fill="none" viewBox="0 0 24 24" stroke="currentColor" stroke-width="2">
                        <path stroke-linecap="round" stroke-linejoin="round" d="M10 6H6a2 2 0 00-2 2v10a2 2 0 002 2h10a2 2 0 002-2v-4M14 4h6m0 0v6m0-6L10 14" />
                    </svg>
                </a>
            </div>
            <div class="flex flex-row items-center gap-4">
                <div class="w-30 h-30 shrink-0">
                    <img 
                        src={petProfilePhoto.src} 
                        alt={`Foto de ${pet?.name || 'mascota'}`} 
                        class="rounded-full w-30 h-30 object-cover border-4 border-white shadow-md"
                    />
                </div>
                <div class="flex flex-col w-full">
                {
                    profileInputs.map(profileInput => 
                        <DynamicInput {...profileInput} readonly />
                    )
                }
                </div>
            </div>
        </div>
        <div class="lg:col-span-4">
            <div class="flow-root bg-white rounded-xl shadow-lg p-8">
                <div class="-mx-4 -my-2 overflow-x-auto sm:-mx-6 lg:-mx-8">
                    <div class="inline-block min-w-full py-2 align-middle sm:px-6 lg:px-8">
                        <SimpleTable id="medicalhistory-table" headers={tableHeaders} items={medicalHistory} itemsName="citas médicas" noItemsMessage="No hay citas médicas registradas.">
                            {
                                medicalHistory?.map(medicalAppointment => 
                                    <tr class="relative hover:bg-gray-50 cursor-pointer">
                                        <td class="whitespace-nowrap py-4 pl-4 pr-3 text-sm text-center text-gray-900 sm:pl-0">
                                            <a href={`/app/pets/${petId}/medical-history/${medicalAppointment.id}`} class="before:absolute before:inset-0" aria-label={`Ver detalles de la cita número ${medicalAppointment.appointmentNumber} de ${medicalAppointment.doctorName}`}>
                                                <span class="relative z-10">{medicalAppointment.appointmentNumber}</span>
                                            </a>
                                        </td>
                                        <td class="whitespace-nowrap px-3 py-4 text-sm text-gray-500">{formatDateToDdMmYyyyHhMm(medicalAppointment.appointmentDate)}</td>
                                        <td class="whitespace-nowrap px-3 py-4 text-sm text-gray-500">{medicalAppointment.doctorName}</td>
                                        <td class="whitespace-nowrap px-3 py-4 text-sm text-gray-500">{medicalAppointment.weight} kg</td>
                                    </tr>
                                )
                            }
                        </SimpleTable>
                    </div>
                </div>
            </div>
        </div>
    </SimpleForm>
    <!-- </form> -->
</ContentContainer>